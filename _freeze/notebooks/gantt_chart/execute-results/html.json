{
  "hash": "39af91835e7e7ba645df3d788921f1d3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"gantt_chart\"\nformat: html\neditor: visual\nexecute:\n  echo: false\n  warning: false\n  message: false\n---\n\n::: {#cell-fig-gantt .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-gantt\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: fig-gantt\nlibrary(ggplot2)\n\n\n# Individual tasks formatted as a data.frame\ntasks <- data.frame(\n  Task = c(\"Research\", \"Regulatory Approval\", \"Clinical Trials\",  \"Marketing\"),\n  StartDate = as.Date(c(\"2019-05-01\", \"2020-01-01\", \"2020-07-01\",  \"2025-06-01\")),\n  EndDate = as.Date(c(\"2019-06-30\", \"2020-06-30\", \"2025-12-31\",   \"2026-06-30\"))\n)\ncolors <- c(\"#deecfb\", \"#bedaf7\", \"#7ab3ef\", \"#368ce7\")\n  \nggplot(tasks, aes(x = StartDate, xend = EndDate, y = fct_rev(fct_inorder(Task)), yend = Task)) + \n  geom_segment(linewidth = 35, color = colors) + \n  labs(\n    title = \"Pharma Company Gantt Chart\",\n    x = \"Duration\",\n    y = \"Task\"\n  ) + \n  theme_bw() + \n  theme(legend.position = \"none\") + \n  theme(\n    plot.title = element_text(size = 20),\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12, angle = 45)\n  ) \n```\n\n::: {.cell-output-display}\n![](gantt_chart_files/figure-html/fig-gantt-1.png){#fig-gantt width=672}\n:::\n:::\n",
    "supporting": [
      "gantt_chart_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}